{
  "uid" : "eed797f74079309d",
  "name" : "test_case_01",
  "fullName" : "test_demo#test_case_01",
  "historyId" : "b418f741c72d07c6507c3d0c440db129",
  "time" : {
    "start" : 1603869606664,
    "stop" : 1603869606820,
    "duration" : 156
  },
  "status" : "broken",
  "statusMessage" : "KeyError: 'token'",
  "statusTrace" : "@allure.feature('测试用例1')\n    # @test.run(name=\"login\",url=\"/1.0/common/login_captcha\")\n    def test_case_01():\n        name = \"login\"\n        url = '/1.0/common/login_captcha'\n        test.data[\"phone\"]=[]         #测试用的\n        test.data[\"phone\"].append({\"mobile\": \"15080600001\"})\n        test.data[\"phone\"].append({\"mobile\": \"15080600002\"})\n>       case.run(name, url)\n\ntest_demo.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\base\\CaseOperate.py:52: in run\n    test.login(url, body)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <base.BasePage.api_test object at 0x00000272C1D78B08>, url = '/1.0/common/login_captcha'\nbody = {'captcha': '1234', 'mobile': '${phone[1].mobile}'}, headers = None\n\n    def login(self,url,body,headers=None):\n        response=requests.post(self.uri+url,body,headers,verify=False)\n        logger_cls.info(\"\\nname:{0}\\nurl:{1}\\nheaders:{2}\\nbody:{3}\\nresponse:{4}\".format(\"login\",url,headers,body,response.json()))\n        self.cookies=response.cookies\n        self.data[\"login\"]=response.json()\n>       self.token=response.json()['data']['token']\nE       KeyError: 'token'\n\n..\\base\\BasePage.py:40: KeyError",
  "flaky" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "KeyError: 'token'",
    "statusTrace" : "@allure.feature('测试用例1')\n    # @test.run(name=\"login\",url=\"/1.0/common/login_captcha\")\n    def test_case_01():\n        name = \"login\"\n        url = '/1.0/common/login_captcha'\n        test.data[\"phone\"]=[]         #测试用的\n        test.data[\"phone\"].append({\"mobile\": \"15080600001\"})\n        test.data[\"phone\"].append({\"mobile\": \"15080600002\"})\n>       case.run(name, url)\n\ntest_demo.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\base\\CaseOperate.py:52: in run\n    test.login(url, body)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <base.BasePage.api_test object at 0x00000272C1D78B08>, url = '/1.0/common/login_captcha'\nbody = {'captcha': '1234', 'mobile': '${phone[1].mobile}'}, headers = None\n\n    def login(self,url,body,headers=None):\n        response=requests.post(self.uri+url,body,headers,verify=False)\n        logger_cls.info(\"\\nname:{0}\\nurl:{1}\\nheaders:{2}\\nbody:{3}\\nresponse:{4}\".format(\"login\",url,headers,body,response.json()))\n        self.cookies=response.cookies\n        self.data[\"login\"]=response.json()\n>       self.token=response.json()['data']['token']\nE       KeyError: 'token'\n\n..\\base\\BasePage.py:40: KeyError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "3137d531077ff9f9",
      "name" : "log",
      "source" : "3137d531077ff9f9.txt",
      "type" : "text/plain",
      "size" : 247
    }, {
      "uid" : "95542481c7cc853a",
      "name" : "stderr",
      "source" : "95542481c7cc853a.txt",
      "type" : "text/plain",
      "size" : 266
    } ],
    "parameters" : [ ],
    "hasContent" : true,
    "stepsCount" : 0,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "feature",
    "value" : "测试用例1"
  }, {
    "name" : "suite",
    "value" : "test_demo"
  }, {
    "name" : "host",
    "value" : "LAPTOP-4V3QBUP4"
  }, {
    "name" : "thread",
    "value" : "18756-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_demo"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "eed797f74079309d.json",
  "parameterValues" : [ ]
}