{"status": "broken", "uuid": "4fec63c4-9346-45a4-b136-95b7c9ec257d", "labels": [{"name": "feature", "value": "getRegionHomeNumbers"}, {"name": "suite", "value": "test_sample"}, {"name": "host", "value": "LAPTOP-1DMUQ9HH"}, {"name": "thread", "value": "2888-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython2"}, {"name": "package", "value": "test_sample"}], "stop": 1590717584146, "testCaseId": "9beadc97dc745b04781917721fc2fee6", "historyId": "bcf5c0b3b21ee411ee5a11e7417fbe6b", "start": 1590717523589, "fullName": "test_sample#test_2", "statusDetails": {"message": "ValueError: No JSON object could be decoded", "trace": "@allure.feature('getRegionHomeNumbers')\n    def test_2():\n>       success=test.getregion()\n\ntest_sample.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\case\\monitoring.py:19: in getregion\n    test.get(name, url, headers)\n..\\base\\demo.py:50: in get\n    response=self.my_requests.get(self.uri+url,cookies=self.cookies).json()\nc:\\python27\\lib\\site-packages\\requests\\models.py:897: in json\n    return complexjson.loads(self.text, **kwargs)\nc:\\python27\\lib\\json\\__init__.py:339: in loads\n    return _default_decoder.decode(s)\nc:\\python27\\lib\\json\\decoder.py:364: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <json.decoder.JSONDecoder object at 0x00000000045B7160>\ns = '<html>\r\n<head><title>404 Not Found</title></head>\r\n<body bgcolor=\"white\">\r\n<center><h1>404 Not Found</h1></center>\r\n<hr><center>nginx/1.12.0</center>\r\n</body>\r\n</html>\r\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` or ``unicode``\n        beginning with a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration:\n>           raise ValueError(\"No JSON object could be decoded\")\nE           ValueError: No JSON object could be decoded\n\nc:\\python27\\lib\\json\\decoder.py:382: ValueError"}, "name": "test_2"}