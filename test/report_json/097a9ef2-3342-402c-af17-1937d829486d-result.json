{"name": "test_login", "status": "broken", "statusDetails": {"message": "IndexError: list index out of range", "trace": "self = <test_01.Test_choice object at 0x00000225A5402D88>\n\n    @allure.feature('测试用例1')\n    # @pytest.mark.parametrize('name', (case.caae_name[\"choice\"][\"login\"]))\n    def test_login(self):\n>       self.pytestObject(self,\"login\")\n\ntest_01.py:13: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\base\\PytestObject.py:13: in pytestObject\n    assertion=case.run(module,name)\n..\\base\\CaseOperate.py:63: in run\n    body = self.myReplace(json.dumps(request_list['body']))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <base.CaseOperate.Case object at 0x00000225A51E87C8>, body = '{\"captcha\": \"1234\", \"mobile\": \"${test.mobile}\"}'\n\n    def myReplace(self, body):\n        if '${' in body:\n            responses = re.findall(r'\\$(.+?)\\}', body, re.M | re.I)\n            for response in responses:\n                if \"myMethod\" in response:\n                    response = \"$\"+response+\"}\"\n                    name = response.split(\"myMethod.\")[1].split(\"(\")[0]\n                    parameter = response.split(name+\"(\")[1].split(\")\")[0]\n                    if '${' in parameter:\n                        response = response+\")}\"\n                        parameter = parameter.replace(\"${\", \"{response.\")\n                        return_name=parameter.split(\"response.\")[1].split(\".\")[0]\n                        obj=MyObject.dict_to_object({\"response\":{return_name:test.data[\"response\"][return_name]}})\n                        parameter = parameter.format(response=obj.response)\n                    new_parameter = myMethod.get(\n                        name, parameter.encode('utf-8').decode('unicode_escape'))\n                    body = body.replace(response, new_parameter)\n                    print(body)\n                else:\n                    response = \"$\"+response+\"}\"\n                    new_response = response\n                    new_response = new_response.replace(\"${\", \"{response.\")\n>                   return_name=parameter.split(\"response.\")[1].split(\".\")[0]\nE                   IndexError: list index out of range\n\n..\\base\\CaseOperate.py:53: IndexError"}, "attachments": [{"name": "stdout", "source": "a8ff2c2f-2ffc-4b2e-ab44-7ca93850b09d-attachment.txt", "type": "text/plain"}], "start": 1605257167242, "stop": 1605257167243, "uuid": "826f3395-09d0-49a0-8ae5-fb52b74fac68", "historyId": "4b27489b1ef16f26c022388963ed9672", "testCaseId": "29833af1bc62bae296571ec4b1662ac8", "fullName": "test_01.Test_choice#test_login", "labels": [{"name": "feature", "value": "测试用例1"}, {"name": "suite", "value": "test_01"}, {"name": "subSuite", "value": "Test_choice"}, {"name": "host", "value": "LAPTOP-4V3QBUP4"}, {"name": "thread", "value": "18988-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_01"}]}